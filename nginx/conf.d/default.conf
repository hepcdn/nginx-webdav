lua_package_path '/etc/nginx/lua/?.lua;;';

# We run dnsmasq on the same machine to resolve the DNS queries
# otherwise /etc/hosts does not get resolved
resolver 127.0.0.1;

# cache for JWT verification results
lua_shared_dict jwt_verification 10m;

# TODO: turn down verbosity when in production
error_log stderr notice;

init_worker_by_lua_block {
    local config = require("config")
    -- if file does not exist, we take the default values
    config.load("/etc/nginx/lua/config.json")
}

map $request_method $upstream_location {
    GET     webdav_read;
    HEAD    webdav_head;
    PUT     webdav_write;
    DELETE  webdav_write;
    COPY    webdav_tpc;
    default webdav_default;
}

server {
    listen 8080;
    server_name localhost;

    location / {
        return 200;
        access_log off;
    }

    location /webdav_health {
        content_by_lua_file /etc/nginx/lua/test_health_content.lua;
    }

    location /webdav {
        rewrite ^/webdav/(.*) /$upstream_location/$1 last;
    }

    location /webdav_read {
        internal;
        alias /var/www/webdav;
        autoindex on;
        default_type application/octet-stream;
        access_by_lua_file /etc/nginx/lua/webdav_access.lua;
        # tuning for large file downloads
        sendfile off;
        # aio on;
        # directio 8m;
        # directio_alignment 4k;
        output_buffers 1 2m;
    }

    location /webdav_head {
        internal;
        alias /var/www/webdav;
        access_by_lua_file /etc/nginx/lua/webdav_access.lua;
        content_by_lua_file /etc/nginx/lua/webdav_head_content.lua;
    }

    location /webdav_write {
        internal;
        alias /var/www/webdav;
        access_by_lua_file /etc/nginx/lua/webdav_access.lua;
        content_by_lua_file /etc/nginx/lua/webdav_write_content.lua;

        # tuning for large file uploads
        client_max_body_size 100G;
        client_body_buffer_size 2m;
        client_body_temp_path /var/www/webdav/.upload;
        client_body_timeout 300s;
    }

    location /webdav_tpc {
        internal;
        access_by_lua_file /etc/nginx/lua/webdav_access.lua;
        content_by_lua_file /etc/nginx/lua/webdav_tpc_content.lua;
    }

    location /webdav_default {
        internal;
        return 405;
    }
}